@{
    SocialNetwork.Models.users viewing_user = ViewBag.ViewingUser;
    SocialNetwork.Models.users user = ViewBag.User;

    ViewBag.Title = "Баны пользователя " + (ViewBag.ViewingUser as SocialNetwork.Models.users).name;

    Dictionary<SocialNetwork.Models.PermissionsToUser, bool> userPermissionsToUser = SocialNetwork.Models.users.getUserPermissionsToUser(user, viewing_user);

    List<object> list_o = ViewBag.ListOnPage;
    List<SocialNetwork.Models.bans> list = new List<SocialNetwork.Models.bans>();
    foreach (object o in list_o)
    {
        list.Add(o as SocialNetwork.Models.bans);
    }
}

<div class="center_content">
    @{
        int total_page_id = Convert.ToInt32(ViewBag.TotalPageId);

        int elements_on_page = Convert.ToInt32(ViewBag.ElementsOnPage);

        int viewing_user_id = (ViewBag.ViewingUser as SocialNetwork.Models.users).id;

        Dictionary<string, string> sort_names = new Dictionary<string, string>();
        sort_names.Add("id", "ID");
        sort_names.Add("user_id_from", "Кем выдан");
        sort_names.Add("ban_datetime_int", "Дата и время блокировки");
        sort_names.Add("is_permanent", "Навсегда ли");
        sort_names.Add("unban_datetime_int", "Дата и время разблокировки");

        string sort_key = ViewBag.SortKey;
        string sort_asc = ViewBag.SortAsc;

        if (userPermissionsToUser[SocialNetwork.Models.PermissionsToUser.CAN_BAN_AND_UNBAN] == true)
        {
            @Html.ActionLink("Выдать бан", "Ban", "Bans", new { id = viewing_user.special_name }, new { @class = "my_button" })
        }

        /* ViewContext.Writer.WriteLine($"<form method=\"GET\" action=\"/Bans/Index/{viewing_user.special_name}?page{total_page_id}&elements_on_page={elements_on_page}\" class=\"page_navigation_form\">");
         MyFunctions.pageNavigation_printFormWithPages(ViewContext.Writer, total_page_id, elements_on_page, sort_names, sort_key, sort_asc);
         ViewContext.Writer.WriteLine("</form>");*/
        @Html.ActionLink("Назад", "Viewing", "Users", new { id = viewing_user.special_name }, new { @class = "my_button" })
    }
    <br />
    <br />
    <table class="black_table">
        <tr>
            <td>
                ID
            </td>
            <td>
                Кем выдан
            </td>
            <td>
                Дата и время блокировки
            </td>
            <td>
                Навсегда ли
            </td>
            <td>
                Дата и время разблокировки
            </td>
            @if (userPermissionsToUser[SocialNetwork.Models.PermissionsToUser.CAN_BAN_AND_UNBAN] == true)
            {
                <td colspan="2">
                    Действие
                </td>
            }
        </tr>
        @{
            foreach (SocialNetwork.Models.bans element in list)
            {
                ViewContext.Writer.WriteLine("<tr>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(element.id);
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                SocialNetwork.Models.users user_ban_from = SocialNetwork.Models.users.getUserFromUserId(element.user_id_from);
                @Html.ActionLink(user_ban_from.special_name, "Viewing", "Users", new { id = user_ban_from.special_name }, new { @class = "my_button_3" })
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(SocialNetwork.Models.users.getDatetimeStringFromDatetimeInt(element.ban_datetime_int));
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                if (element.is_permanent == 1)
                {
                    ViewContext.Writer.WriteLine("Да");
                }
                else
                {
                    ViewContext.Writer.WriteLine("Нет");
                }
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(SocialNetwork.Models.users.getDatetimeStringFromDatetimeInt(Convert.ToInt32(element.unban_datetime_int)));
                ViewContext.Writer.WriteLine("</td>");

                if (userPermissionsToUser[SocialNetwork.Models.PermissionsToUser.CAN_BAN_AND_UNBAN] == true)
                {
                    ViewContext.Writer.WriteLine("<td>");
                    @Html.ActionLink("Снять", "Unban", "Bans", new { id = viewing_user.special_name, ban_id = element.id }, new { @class = "my_button_3" })
                    ViewContext.Writer.WriteLine("</td>");

                    ViewContext.Writer.WriteLine("<td>");
                    @Html.ActionLink("Удалить", "Delete", "Bans", new { id = viewing_user.special_name, ban_id = element.id }, new { @class = "my_button_3" })
                    ViewContext.Writer.WriteLine("</td>");
                }

                ViewContext.Writer.WriteLine("</tr>");
            }

            if (list.Count == 0)
            {
                ViewContext.Writer.WriteLine("<tr>");
                ViewContext.Writer.WriteLine("<td colspan=\"5\">");
                ViewContext.Writer.WriteLine("Нет банов");
                ViewContext.Writer.WriteLine("</td>");
                ViewContext.Writer.WriteLine("</tr>");
            }

            ViewContext.Writer.WriteLine("<tr id=\"records_white_line\">");
            ViewContext.Writer.WriteLine("<td colspan=\"4\">");
            ViewContext.Writer.WriteLine("</td>");
            ViewContext.Writer.WriteLine("</tr>");
        }
    </table>
    @{
        ViewContext.Writer.WriteLine($"<form method=\"GET\" action=\"/Bans/Index/{viewing_user.special_name}?page{ total_page_id}&elements_on_page={elements_on_page}\" class=\"page_navigation_form\">");
        MyFunctions.pageNavigation_printFormWithPages(ViewContext.Writer, total_page_id, elements_on_page, sort_names, sort_key, sort_asc);
        ViewContext.Writer.WriteLine("</form>");
    }
</div>
