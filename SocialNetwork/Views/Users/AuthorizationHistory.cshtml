@{
    ViewBag.Title = "История авторизаций пользователя " + (ViewBag.ViewingUser as SocialNetwork.Models.users).name;

    List<object> list_o = ViewBag.ListOnPage;
    List<SocialNetwork.Models.authorization_history> list = new List<SocialNetwork.Models.authorization_history>();
    foreach (object o in list_o)
    {
        list.Add(o as SocialNetwork.Models.authorization_history);
    }

    SocialNetwork.Models.users viewing_user = ViewBag.ViewingUser as SocialNetwork.Models.users;
}

<div class="center_content">
    @{
        int total_page_id = Convert.ToInt32(ViewBag.TotalPageId);

        int elements_on_page = Convert.ToInt32(ViewBag.ElementsOnPage);

        int viewing_user_id = (ViewBag.ViewingUser as SocialNetwork.Models.users).id;

        Dictionary<string, string> sort_names = new Dictionary<string, string>();
        sort_names.Add("id", "ID");
        sort_names.Add("authorization_datetime_int", "Дата и время");
        sort_names.Add("ip_address", "IP-адрес");

        string sort_key = ViewBag.SortKey;
        string sort_asc = ViewBag.SortAsc;

        @Html.ActionLink("Назад", "Viewing", "Users", new { id = viewing_user.special_name }, new { @class = "my_button" })
    }
    <br />
    <br />
    <table class="black_table">
        <tr>
            <td>
                ID
            </td>
            <td>
                Дата и время
            </td>
            <td>
                IP-адрес
            </td>
        </tr>
        @{
            foreach (SocialNetwork.Models.authorization_history element in list)
            {
                ViewContext.Writer.WriteLine("<tr>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(element.id);
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(SocialNetwork.Models.users.getDatetimeStringFromDatetimeInt(element.authorization_datetime_int));
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("<td>");
                ViewContext.Writer.WriteLine(element.ip_address);
                ViewContext.Writer.WriteLine("</td>");

                ViewContext.Writer.WriteLine("</tr>");
            }

            if (list.Count == 0)
            {
                ViewContext.Writer.WriteLine("<tr>");
                ViewContext.Writer.WriteLine("<td colspan=\"5\">");
                ViewContext.Writer.WriteLine("Нет историй авторизаций");
                ViewContext.Writer.WriteLine("</td>");
                ViewContext.Writer.WriteLine("</tr>");
            }

            ViewContext.Writer.WriteLine("<tr id=\"records_white_line\">");
            ViewContext.Writer.WriteLine("<td colspan=\"5\">");
            ViewContext.Writer.WriteLine("</td>");
            ViewContext.Writer.WriteLine("</tr>");
        }
    </table>
    @{
        ViewContext.Writer.WriteLine($"<form method=\"GET\" action=\"/Users/AuthorizationHistory/{viewing_user.special_name}?page{ total_page_id}&elements_on_page={elements_on_page}\" class=\"page_navigation_form\">");
        MyFunctions.pageNavigation_printFormWithPages(ViewContext.Writer, total_page_id, elements_on_page, sort_names, sort_key, sort_asc);
        ViewContext.Writer.WriteLine("</form>");
    }
</div>
